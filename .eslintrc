{
  "root": true,
  "ignorePatterns": [
    "node_modules/**",
    "**/node_modules/**",
    "bower_components/**",
    "**/bower_components/**"
  ],
  "overrides": [
    /**
			* 1. TypeScript Configuration and Eslint / eslint-plugin-import / @typescript-eslint / eslint-plugin-react / eslint-plugin-jsx-a11y / eslint-plugin-react-hooks / airbnb Rules
			*/
    {
      "files": [
        "**/*.ts?(x)"
      ],
      "excludedFiles": [
        "**/*.js?(x)",
        "**/*.html",
        "**/*.css",
        "**/*.scss",
        "**/*.json"
      ],
      "env": {
        "browser": true,
        "es6": true,
        "es2016": true,
        "es2017": true,
        "es2018": true,
        "es2019": true,
        "es2020": true,
        "es2021": true,
        "es2022": true,
        "jest": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:jsx-a11y/recommended",
        "plugin:react-hooks/recommended",
        "prettier"
      ],
      "plugins": [
        "react",
        "import",
        "@typescript-eslint",
        "jsx-a11y",
        "react-hooks",
        "prettier"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
          "globalReturn": true,
          "impliedStrict": true,
          "jsx": true
        },
        "warnOnUnsupportedTypeScriptVersion": true,
        "project": "./tsconfig.eslint.json"
      },
      "rules": {
        /**
					* 1. Prettier - prettier / eslint-plugin-prettier / eslint-config-prettier
					*/
        "prettier/prettier": [
          2,
          {
            "tabWidth": 2,
            "useTabs": true,
            "semi": true,
            "singleQuote": false,
            "quoteProps": "consistent",
            "jsxSingleQuote": false,
            "trailingComma": "all",
            "bracketSpacing": true,
            "bracketSameLine": false,
            "arrowParens": "avoid",
            "requirePragma": false,
            "insertPragma": false,
            "proseWrap": "always",
            "htmlWhitespaceSensitivity": "css",
            "vueIndentScriptAndStyle": true,
            "endOfLine": "lf",
            "embeddedLanguageFormatting": "auto",
            "singleAttributePerLine": true
          }
        ],
        "no-nested-ternary": 0,
        "no-underscore-dangle": 0,
        "class-methods-use-this": 0,
        /**
					* 2. Eslint - eslint
					*/
        "no-await-in-loop": 2,
        "no-self-compare": 2,
        "block-scoped-var": 2,
        "consistent-return": 0,
        "curly": [ // --fix
          2,
          "multi-line"
        ],
        "func-names": [
          2,
          "as-needed",
          {
            "generators": "as-needed"
          }
        ],
        "default-case": 2,
        "default-case-last": 2,
        "id-denylist": [
          2,
          "cb",
          "callback"
        ],
        "id-length": [
          2,
          {
            "min": 3,
            "max": 30,
            "properties": "always",
            "exceptions": [
              "i",
              "j",
              "k",
              "id",
              "db"
            ]
          }
        ],
        "id-match": [
          0,
          "^(_|--)?([a-zA-Z]+)(--)?([a-zA-Z]+)(__)?([a-zA-Z]+)(\\$)?$",
          {
            "properties": true,
            "classFields": true,
            "onlyDeclarations": true,
            "ignoreDestructuring": true
          }
        ],
        "no-console": [
          2,
          {
            "allow": [
              "log",
              "error",
              "warn"
            ]
          }
        ],
        "arrow-body-style": [
          2,
          "as-needed",
          {
            "requireReturnForObjectLiteral": true
          }
        ],
        "object-shorthand": [ // --fix
          2,
          "consistent-as-needed"
        ],
        "spaced-comment": [ // --fix
          2,
          "always",
          {
            "block": {
              "balanced": true
            }
          }
        ],
        "key-spacing": [ // --fix
          2,
          {
            "mode": "strict"
          }
        ],
        "jsx-quotes": [ // default --fix
          2,
          "prefer-double"
        ],
        /**
         * 3. Import - eslint-plugin-import
         */
        "import/consistent-type-specifier-style": [
          2,
          "prefer-top-level"
        ],
        "import/default": 2,
        "import/dynamic-import-chunkname": [
          2,
          {
            "importFunctions": [
              "dynamicImport"
            ],
            "webpackChunknameFormat": "[a-zA-Z0-57-9-/_]+"
          }
        ],
        "import/export": 2,
        "import/exports-last": 2,
        "import/extensions": [
          2,
          "never",
          {
            "ignorePackages": true,
            "pattern": {
              "html": "never",
              "css": "always",
              "scss": "always",
              "js": "never",
              "jsx": "never",
              "ts": "never",
              "tsx": "never"
            }
          }
        ],
        "import/first": 2,
        "import/group-exports": 2,
        "import/max-dependencies": [
          "error",
          {
            "max": 30,
            "ignoreTypeImports": false
          }
        ],
        "import/named": 2,
        "import/namespace": [
          2,
          {
            "allowComputed": false
          }
        ],
        "import/newline-after-import": [
          2,
          {
            "count": 1,
            "considerComments": true
          }
        ],
        "import/no-absolute-path": [
          2,
          {
            "esmodule": true,
            "commonjs": true,
            "amd": true
          }
        ],
        "import/no-amd": 2,
        "import/no-anonymous-default-export": [
          2,
          {
            "allowArray": false,
            "allowArrowFunction": false,
            "allowAnonymousClass": false,
            "allowAnonymousFunction": false,
            "allowCallExpression": true,
            "allowLiteral": false,
            "allowObject": false
          }
        ],
        "import/no-commonjs": [
          2,
          {
            "allowRequire": true,
            "allowConditionalRequire": true,
            "allowPrimitiveModules": true
          }
        ],
        "import/no-cycle": 2,
        "import/no-default-export": 0,
        "import/no-deprecated": 2,
        "import/no-duplicates": [
          "error",
          {
            "considerQueryString": true,
            "prefer-inline": true
          }
        ],
        "import/no-dynamic-require": 2,
        "import/no-empty-named-blocks": 2,
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true,
            "optionalDependencies": true,
            "peerDependencies": true,
            "bundledDependencies": true
          }
        ],
        "import/no-import-module-exports": [
          "error",
          {
            "exceptions": []
          }
        ],
        "import/no-internal-modules": [
          2,
          {
            "allow": [
              "**/public/**/*",
              "**/src/**/*",
              "**/node_modules/**/*"
            ]
          }
        ],
        "import/no-mutable-exports": 2,
        "import/no-named-as-default-member": 2,
        "import/no-named-as-default": 2,
        "import/no-named-default": 2,
        "import/no-named-export": 0,
        "import/no-namespace": 2,
        "import/no-nodejs-modules": [
          2,
          {
            "allow": [
              "path"
            ]
          }
        ],
        "import/no-relative-packages": 2,
        "import/no-relative-parent-imports": 0,
        "import/no-restricted-paths": 2,
        "import/no-self-import": 2,
        "import/no-unassigned-import": [
          2,
          {
            "allow": [
              "**/*.css",
              "**/*.scss",
              "**/*.svg",
              "**/bootstrap.min.css",
              "**/bootstrap.bundle.min",
              "**/popper",
              "**/jest-dom"
            ]
          }
        ],
        "import/no-unresolved": [
          2,
          {
            "commonjs": true,
            "amd": true,
            "caseSensitive": true,
            "caseSensitiveStrict": true
          }
        ],
        "import/no-unused-modules": [
          2,
          {
            "missingExports": true,
            "unusedExports": true,
            "src": [],
            "ignoreExports": []
          }
        ],
        "import/no-useless-path-segments": [
          2,
          {
            "noUselessIndex": true
          }
        ],
        "import/no-webpack-loader-syntax": 2,
        "import/order": [
          2,
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              [
                "parent",
                "sibling"
              ],
              "index",
              "object",
              "type"
            ],
            "pathGroups": [
              {
                "pattern": "@public/**",
                "group": "external",
                "position": "after"
              },
              {
                "pattern": "@src/**",
                "group": "external",
                "position": "after"
              }
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "orderImportKind": "asc",
              "caseInsensitive": false
            },
            "warnOnUnassignedImports": true
          }
        ],
        "import/prefer-default-export": [
          2,
          {
            "target": "any"
          }
        ],
        "import/unambiguous": 2,
        /**
					* 4. Typescript Rules - @typescript-eslint
					*/
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": "allow-with-description",
            "ts-check": false,
            "minimumDescriptionLength": 3
          }
        ],
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "String": {
                "message": "Always use the lower-case types for consistency. Did you mean `string`?",
                "fixWith": "string"
              },
              "Boolean": {
                "message": "Always use the lower-case types for consistency. Did you mean `boolean`?",
                "fixWith": "boolean"
              },
              "Number": {
                "message": "Always use the lower-case types for consistency. Did you mean `number`?",
                "fixWith": "number"
              },
              "Symbol": {
                "message": "Always use the lower-case types for consistency. Did you mean `symbol`?",
                "fixWith": "symbol"
              },
              "Object": {
                "message": "Always use the lower-case types for consistency. Did you mean `object`?",
                "fixWith": "object"
              },
              "Function": {
                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
                "fixWith": "function"
              }
            }
          }
        ],
        "brace-style": 0, // --fix
        "@typescript-eslint/brace-style": [ // default --fix
          "error",
          "1tbs",
          {
            "allowSingleLine": false
          }
        ],
        "@typescript-eslint/class-literal-property-style": [
          "error",
          "getters"
        ],
        "comma-dangle": 0, // --fix
        "@typescript-eslint/comma-dangle": [ // --fix
          "error",
          {
            // Eslint
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "always-multiline",
            // TypeScript
            "enums": "always-multiline",
            "generics": "always-multiline",
            "tuples": "always-multiline"
          }
        ],
        "comma-spacing": 0, // --fix
        "@typescript-eslint/comma-spacing": [
          2,
          {
            "before": false,
            "after": true
          }
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "no-type-imports",
            "disallowTypeAnnotations": true
          }
        ],
        "default-param-last": 0,
        "@typescript-eslint/default-param-last": 2,
        "dot-notation": 0,
        "@typescript-eslint/dot-notation": [
          "error",
          {
            "allowKeywords": true,
            "allowPrivateClassPropertyAccess": true,
            "allowProtectedClassPropertyAccess": true,
            "allowIndexSignaturePropertyAccess": true
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "ignoredMethodNames": [],
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowArgumentsExplicitlyTypedAsAny": false,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowedNames": [],
            "allowHigherOrderFunctions": true,
            "allowTypedFunctionExpressions": true
          }
        ],
        "func-call-spacing": 0, // --fix
        "@typescript-eslint/func-call-spacing": [ // --fix
          2,
          "always",
          {
            "allowNewlines": false
          }
        ],
        "indent": 0, // --fix
        "@typescript-eslint/indent": [ // --fix
          2,
          "tab",
          {
            "ignoredNodes": [],
            "SwitchCase": 1,
            "VariableDeclarator": {
              "var": 1,
              "let": 1,
              "const": 1
            },
            "outerIIFEBody": 1,
            "MemberExpression": 1,
            "FunctionDeclaration": {
              "body": 1,
              "parameters": "first"
            },
            "FunctionExpression": {
              "body": 1,
              "parameters": "first"
            },
            "StaticBlock": {
              "body": 1
            },
            "CallExpression": {
              "arguments": "first"
            },
            "ArrayExpression": "first",
            "ObjectExpression": "first",
            "ImportDeclaration": "first",
            "flatTernaryExpressions": true,
            "offsetTernaryExpressions": true,
            "ignoreComments": false
          }
        ],
        "init-declarations": 0,
        "@typescript-eslint/init-declarations": [
          2,
          "always"
        ],
        "keyword-spacing": 0, // --fix
        "@typescript-eslint/keyword-spacing": [ // default --fix
          2,
          {
            "before": true,
            "after": true
          }
        ],
        "lines-between-class-members": 0, // --fix
        "@typescript-eslint/lines-between-class-member": [ // default --fix
          2,
          "always"
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "multilineDetection": "brackets"
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "signature",
              "field",
              "constructor",
              "method"
            ]
          }
        ],
        "@typescript-eslint/method-signature-style": "error",
        "camelcase": [
          2,
          {
            "properties": "always",
            "ignoreDestructuring": true,
            "ignoreImports": true,
            "ignoreGlobals": true
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": [
              "default",
              "variableLike",
              "typeLike",
              "property",
              "method"
            ],
            "format": null,
            "custom": {
              "regex": "^(_|--)?([a-zA-Z]+)(--)?([a-zA-Z]+)(__)?([a-zA-Z]+)(\\$)?",
              "match": true
            },
            "leadingUnderscore": "allowSingleOrDouble",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": [
              "private"
            ],
            "format": null,
            "custom": {
              "regex": "^(_|--)?([a-zA-Z]+)(--)?([a-zA-Z]+)(__)?([a-zA-Z]+)(\\$)?",
              "match": true
            },
            "leadingUnderscore": "require",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "interface",
            "format": [
              "PascalCase"
            ],
            "custom": {
              "regex": "^I[A-Z]",
              // "regex": "^I([A-Z]+)(--)?([a-zA-Z]+)(__)?([a-zA-Z]+)(\\$)?",
              "match": true
            },
            "leadingUnderscore": "allowSingleOrDouble",
            "trailingUnderscore": "forbid"
          }
        ],
        "no-array-constructor": 0,
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": [
          "error",
          {
            "ignoredTypeNames": [
              "RegExp"
            ]
          }
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": [
          "error",
          {
            "ignoreArrowShorthand": true,
            "ignoreVoidOperator": true
          }
        ],
        "no-dupe-class-members": 0, // recommended
        "@typescript-eslint/no-dupe-class-members": "error",
        "no-duplicate-imports": 0,
        "@typescript-eslint/no-duplicate-imports": [
          2,
          {
            "includeExports": true
          }
        ],
        "@typescript-eslint/no-dynamic-delete": "error",
        "no-empty-function": 0,
        "@typescript-eslint/no-empty-function": [
          2,
          {
            "allow": [
              "functions",
              "arrowFunctions",
              "asyncFunctions",
              "generatorFunctions",
              "methods",
              "asyncMethods",
              "generatorMethods",
              // "getters",
              // "setters",
              "constructors",
              "private-constructors",
              "protected-constructors",
              "decoratedFunctions"
            ]
          }
        ],
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": false
          }
        ],
        "@typescript-eslint/no-explicit-any": [
          "error",
          {
            "fixToUnknown": true,
            "ignoreRestArgs": true
          }
        ],
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "no-extra-parens": 0, // recommended fix
        "@typescript-eslint/no-extra-parens": [ // --fix
          2,
          "all",
          {
            "conditionalAssign": false,
            "returnAssign": false,
            "nestedBinaryExpressions": false,
            "ignoreJSX": "all",
            "enforceForArrowConditionals": false,
            "enforceForSequenceExpressions": false,
            "enforceForNewInMemberExpressions": false,
            "enforceForFunctionPrototypeMethods": false
          }
        ],
        "no-extra-semi": 0, // recommended fix
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": [ // --fix
          2,
          {
            "allowConstructorOnly": false,
            "allowEmpty": false,
            "allowStaticOnly": false,
            "allowWithDecorator": false
          }
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreVoid": false,
            "ignoreIIFE": false
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": [
          "error",
          {
            "allowExplicitAny": true
          }
        ],
        "no-implied-eval": 0,
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true,
            "ignoreProperties": true
          }
        ],
        "no-invalid-this": 0,
        "@typescript-eslint/no-invalid-this": [
          2,
          {
            "capIsConstructor": false
          }
        ],
        "@typescript-eslint/no-invalid-void-type": [
          2,
          {
            "allowInGenericTypeArguments": true,
            "allowAsThisParameter": true
          }
        ],
        "no-loop-func": 0,
        "@typescript-eslint/no-loop-func": "error",
        "no-loss-of-precision": 0,
        "@typescript-eslint/no-loss-of-precision": "error",
        "no-magic-numbers": 0,
        "@typescript-eslint/no-magic-numbers": [
          2,
          {
            "ignoreArrayIndexes": true,
            "ignoreDefaultValues": true,
            "enforceConst": true,
            "detectObjects": true,
            "ignoreEnums": false,
            "ignoreNumericLiteralTypes": false,
            "ignoreReadonlyClassProperties": true,
            "ignore": []
          }
        ],
        "@typescript-eslint/no-meaningless-void-operator": [
          "error",
          {
            "checkNever": false
          }
        ],
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksConditionals": true,
            "checksVoidReturn": true
          }
        ],
        "@typescript-eslint/no-namespace": [
          "error",
          {
            "allowDeclarations": false,
            "allowDefinitionFiles": true
          }
        ],
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": [
          "error",
          {
            "allows": [
              "private readonly",
              "protected readonly",
              "public readonly"
            ]
          }
        ],
        "no-redeclare": 0, // recommended
        "@typescript-eslint/no-redeclare": [ // recommended
          2,
          {
            "builtinGlobals": true,
            "ignoreDeclarationMerge": true
          }
        ],
        "@typescript-eslint/no-require-imports": "error",
        "no-restricted-imports": 0,
        "@typescript-eslint/no-restricted-imports": "off",
        "no-shadow": 0,
        "@typescript-eslint/no-shadow": [
          2,
          {
            "builtinGlobals": true,
            "hoist": "all",
            "allow": [
              "event",
              "name",
              "location",
              "history",
              "connect",
              "screen"
            ],
            "ignoreTypeValueShadow": true,
            "ignoreFunctionTypeParameterNameValueShadow": true
          }
        ],
        "@typescript-eslint/no-this-alias": [
          "error",
          {
            "allowDestructuring": false,
            "allowedNames": [
              "self"
            ]
          }
        ],
        "no-throw-literal": 0,
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-type-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
          "error",
          {
            "allowComparingNullableBooleansToTrue": false,
            "allowComparingNullableBooleansToFalse": false
          }
        ],
        "@typescript-eslint/no-unnecessary-condition": [
          "error",
          {
            "allowConstantLoopConditions": false,
            "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
          }
        ],
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": [
          "error",
          {
            "typesToIgnore": []
          }
        ],
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "no-unused-expressions": 0,
        "@typescript-eslint/no-unused-expressions": [
          2,
          {
            "allowShortCircuit": true,
            "allowTernary": true,
            "allowTaggedTemplates": true
          }
        ],
        "@typescript-eslint/no-unused-vars-experimental": 0,
        "no-unused-vars": 0, // recommended
        "@typescript-eslint/no-unused-vars": [ // recommended
          2,
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "all",
            "argsIgnorePattern": "^_",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "^e",
            "destructuredArrayIgnorePattern": "^_",
            "ignoreRestSiblings": false
          }
        ],
        "no-use-before-define": 0,
        "@typescript-eslint/no-use-before-define": [
          2,
          {
            "functions": true,
            "classes": true,
            "variables": true,
            "enums": true,
            "typedefs": true,
            "ignoreTypeReferences": true
          }
        ],
        "no-useless-constructor": 0,
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "off",
        "object-curly-spacing": 0, // --fix
        "@typescript-eslint/object-curly-spacing": [ // --fix
          2,
          "always",
          {
            "arraysInObjects": true,
            "objectsInObjects": true
          }
        ],
        "padding-line-between-statements": 0, // --fix
        "@typescript-eslint/padding-line-between-statements": [ // --fix
          2,
          {
            "blankLine": "always",
            "prev": [
              "*"
            ],
            "next": [
              "var",
              "let",
              "const",
              "try",
              "throw",
              "if",
              "for",
              "do",
              "while",
              "switch",
              "case",
              "default",
              "class",
              "function",
              "iife",
              "with",
              "interface",
              "type",
              "return",
              "break",
              "continue",
              "debugger"
            ]
          },
          {
            "blankLine": "always",
            "prev": [
              "var",
              "let",
              "const",
              "try",
              "throw",
              "if",
              "for",
              "do",
              "while",
              "switch",
              "case",
              "default",
              "class",
              "function",
              "iife",
              "with",
              "interface",
              "type",
              "return",
              "break",
              "continue",
              "debugger"
            ],
            "next": [
              "*"
            ]
          }
        ],
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": [
          "error",
          {
            "allowBitwiseExpressions": true
          }
        ],
        "@typescript-eslint/prefer-namespace-keyword": "off",
        "@typescript-eslint/prefer-nullish-coalescing": [
          "error",
          {
            "ignoreConditionalTests": true,
            "ignoreMixedLogicalExpressions": true
          }
        ],
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": [
          "error",
          {
            "checkParameterProperties": true,
            "ignoreInferredTypes": true,
            "treatMethodsAsReadonly": false
          }
        ],
        "@typescript-eslint/prefer-readonly": [
          "error",
          {
            "onlyInlineLambdas": true
          }
        ],
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-return-this-type": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/promise-function-async": [
          "error",
          {
            "allowedPromiseNames": [
              "Thenable"
            ],
            "checkArrowFunctions": true,
            "checkFunctionDeclarations": true,
            "checkFunctionExpressions": true,
            "checkMethodDeclarations": true
          }
        ],
        "quotes": 0, // --fix
        "@typescript-eslint/quotes": [ // --fix
          2,
          "backtick",
          {
            "avoidEscape": true,
            "allowTemplateLiterals": true
          }
        ],
        "@typescript-eslint/require-array-sort-compare": [
          "error",
          {
            "ignoreStringArrays": true
          }
        ],
        "require-await": 0,
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": [
          "error",
          {
            "allowNumber": true,
            "allowBoolean": true,
            "allowAny": true,
            "allowNullish": true,
            "allowRegExp": true
          }
        ],
        "no-return-await": 0,
        "@typescript-eslint/return-await": [
          "error",
          "in-try-catch"
        ],
        "semi": 0, // --fix
        "@typescript-eslint/semi": [ // default --fix
          "error",
          "always"
        ],
        "@typescript-eslint/sort-type-union-intersection-members": "error",
        "space-before-function-paren": 0, // --fix
        "@typescript-eslint/space-before-function-paren": [ // --fix
          2,
          "always"
        ],
        "space-infix-ops": 0, // --fix
        "@typescript-eslint/space-infix-ops": "error",
        "@typescript-eslint/strict-boolean-expressions": [
          "error",
          {
            "allowString": true,
            "allowNumber": true,
            "allowNullableObject": true,
            "allowNullableBoolean": false,
            "allowNullableString": false,
            "allowNullableNumber": false,
            "allowAny": false,
            "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
          }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "types": "prefer-import"
          }
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "error",
          {
            "before": true,
            "after": true
          }
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrayDestructuring": true,
            "arrowParameter": true,
            "memberVariableDeclaration": true,
            "objectDestructuring": true,
            "parameter": true,
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": true
          }
        ],
        "@typescript-eslint/unbound-method": [
          "error",
          {
            "ignoreStatic": true
          }
        ],
        "@typescript-eslint/unified-signatures": "error",
        /**
         * 5. React - eslint-plugin-react
         */
        "react/boolean-prop-naming": [
          2,
          {
            "propTypeNames": [
              "bool",
              "mutuallyExclusiveTrueProps"
            ],
            "rule": "^(is|has)?([a-zA-Z]+)(--)?([a-zA-Z]+)(__)?([a-zA-Z]+)(\\$)?$",
            "message": "It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})",
            "validateNested": true
          }
        ],
        "react/button-has-type": [
          2,
          {
            "button": true,
            "submit": true,
            "reset": true
          }
        ],
        "react/default-props-match-prop-types": [
          2,
          {
            "allowRequiredDefaults": false
          }
        ],
        "react/destructuring-assignment": [
          2,
          "always",
          {
            "ignoreClassFields": false
          }
        ],
        "react/display-name": [
          2,
          {
            "ignoreTranspilerName": false
          }
        ],
        "react/forbid-component-props": [
          2,
          {
            "forbid": [
              {
                "propName": "className",
                "allowedFor": [
                  "Link",
                  "NavLink"
                ],
                "message": "Avoid using someProp"
              },
              {
                "propName": "style",
                "allowedFor": [
                  "Link",
                  "NavLink"
                ],
                "message": "Avoid using someProp"
              }
            ]
          }
        ],
        "react/forbid-dom-props": [
          2,
          {
            "forbid": [
              {
                "propName": "id",
                "message": "Avoid using id"
              }
            ]
          }
        ],
        "react/forbid-elements": [
          2,
          {
            "forbid": []
          }
        ],
        "react/forbid-foreign-prop-types": 2,
        "react/forbid-prop-types": [
          2,
          {
            "forbid": [],
            "checkContextTypes": true,
            "checkChildContextTypes": true
          }
        ],
        "react/function-component-definition": [ // --fix
          2,
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/no-access-state-in-setstate": 2,
        "react/no-adjacent-inline-elements": 2,
        "react/no-array-index-key": 2,
        "react/no-arrow-function-lifecycle": 2, // --fix
        "react/no-children-prop": [ // recommended
          2,
          {
            "allowFunctions": true
          }
        ],
        "react/no-danger": 2,
        "react/no-danger-with-children": 2,
        // "react/no-deprecated": 2,
        "react/no-did-mount-set-state": [
          2,
          "disallow-in-func"
        ],
        "react/no-did-update-set-state": [
          2,
          "disallow-in-func"
        ],
        "react/no-direct-mutation-state": 2,
        "react/no-find-dom-node": 2,
        "react/no-invalid-html-attribute": 2,
        "react/no-is-mounted": 2,
        "react/no-multi-comp": [
          2,
          {
            "ignoreStateless": true
          }
        ],
        "react/no-namespace": 2,
        "react/no-redundant-should-component-update": 2,
        "react/no-render-return-value": 2,
        "react/no-set-state": 0,
        "react/no-string-refs": [
          2,
          {
            "noTemplateLiterals": true
          }
        ],
        "react/no-this-in-sfc": 2,
        "react/no-typos": 2,
        "react/no-unescaped-entities": [
          2,
          {
            "forbid": [
              ">",
              "}"
            ]
          }
        ],
        "react/no-unknown-property": [
          2,
          {
            "ignore": [
              "className",
              "style"
            ]
          }
        ],
        "react/no-unsafe": [
          2,
          {
            "checkAliases": true
          }
        ],
        "react/no-unstable-nested-components": [
          2,
          {
            "allowAsProps": true
          }
        ],
        "react/no-unused-class-component-methods": 2,
        "react/no-unused-prop-types": [
          2,
          {
            "ignore": [],
            "customValidators": [],
            "skipShapeProps": true
          }
        ],
        "react/no-unused-state": 2,
        "react/no-will-update-set-state": [
          2,
          "disallow-in-func"
        ],
        "react/prefer-es6-class": [
          2,
          "always"
        ],
        "react/prefer-exact-props": 2,
        "react/prefer-read-only-props": 2,
        "react/prefer-stateless-function": [
          2,
          {
            "ignorePureComponents": true
          }
        ],
        "react/prop-types": [
          2,
          {
            "ignore": [],
            "customValidators": [],
            "skipUndeclared": true
          }
        ],
        "react/react-in-jsx-scope": 2,
        "react/require-default-props": [
          2,
          {
            "forbidDefaultForRequired": true,
            "ignoreFunctionalComponents": true
          }
        ],
        "react/require-optimization": 2,
        "react/require-render-return": 2,
        "react/self-closing-comp": [
          2,
          {
            "component": true,
            "html": true
          }
        ],
        "react/sort-comp": [
          2,
          {
            "order": [
              "type-annotations",
              "static-variables ",
              "instance-variables",
              "getters ",
              "setters ",
              "lifecycle",
              "static-methods",
              "instance-methods",
              "everything-else",
              "render"
            ],
            "groups": {
              "lifecycle": [
                "displayName",
                "propTypes",
                "contextTypes",
                "childContextTypes",
                "mixins",
                "statics",
                "defaultProps",
                "constructor",
                "getDefaultProps",
                "state",
                "getInitialState",
                "getChildContext",
                "getDerivedStateFromProps",
                "componentWillMount",
                "UNSAFE_componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "UNSAFE_componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "UNSAFE_componentWillUpdate",
                "getSnapshotBeforeUpdate",
                "componentDidUpdate",
                "componentDidCatch",
                "componentWillUnmount"
              ]
            }
          }
        ],
        "react/sort-prop-types": [
          2,
          {
            "callbacksLast": true,
            "ignoreCase": true,
            "requiredFirst": true,
            "sortShapeProp": true,
            "noSortAlphabetically": true
          }
        ],
        "react/state-in-constructor": [
          2,
          "always"
        ],
        "react/static-property-placement": [
          2,
          "static public field",
          {
            "childContextTypes": "static public field",
            "contextTypes": "static public field",
            "contextType": "static public field",
            "defaultProps": "static public field",
            "displayName": "static public field",
            "propTypes": "static public field"
          }
        ],
        "react/style-prop-object": [
          2,
          {
            "allow": []
          }
        ],
        "react/void-dom-elements-no-children": 2,
        // JSX-specific rules
        "react/jsx-boolean-value": [
          2,
          "never"
        ],
        "react/jsx-child-element-spacing": 0,
        "react/jsx-closing-bracket-location": [
          2,
          {
            "nonEmpty": "line-aligned",
            "selfClosing": "line-aligned"
          }
        ],
        "react/jsx-closing-tag-location": 2,
        "react/jsx-curly-brace-presence": [
          2,
          {
            "props": "ignore",
            "children": "ignore"
          }
        ],
        "react/jsx-curly-newline": [
          2,
          {
            "multiline": "consistent",
            "singleline": "consistent"
          }
        ],
        "react/jsx-curly-spacing": [
          2,
          {
            "when": "always",
            "children": true,
            "allowMultiline": true,
            "attributes": {
              "allowMultiline": true
            },
            "spacing": {
              "objectLiterals": "always"
            }
          }
        ],
        "react/jsx-equals-spacing": [
          2,
          "never"
        ],
        "react/jsx-filename-extension": [
          1,
          {
            "extensions": [
              ".js",
              ".jsx",
              ".ts",
              ".tsx"
            ]
          }
        ],
        "react/jsx-first-prop-new-line": [
          2,
          "multiline"
        ],
        "react/jsx-fragments": [
          2,
          "syntax"
        ],
        "react/jsx-handler-names": [
          2,
          {
            "eventHandlerPrefix": "handle",
            "eventHandlerPropPrefix": "on",
            "checkLocalVariables": true,
            "checkInlineFunction": true
          }
        ],
        "react/jsx-indent": [
          2,
          "tab",
          {
            "checkAttributes": false,
            "indentLogicalExpressions": true
          }
        ],
        "react/jsx-indent-props": [
          2,
          {
            "indentMode": "tab",
            "ignoreTernaryOperator": true
          }
        ],
        "react/jsx-key": [
          2,
          {
            "checkFragmentShorthand": true
          }
        ],
        "react/jsx-max-depth": [
          2,
          {
            "max": 15
          }
        ],
        "react/jsx-max-props-per-line": [
          2,
          {
            "maximum": 1,
            "when": "multiline"
          }
        ],
        "react/jsx-newline": [
          2,
          {
            "prevent": true
          }
        ],
        "react/jsx-no-bind": [
          2,
          {
            "ignoreDOMComponents": true,
            "ignoreRefs": true,
            "allowArrowFunctions": true,
            "allowFunctions": false,
            "allowBind": true
          }
        ],
        "react/jsx-no-comment-textnodes": 2,
        "react/jsx-no-constructed-context-values": 2,
        "react/jsx-no-duplicate-props": [
          2,
          {
            "ignoreCase": false
          }
        ],
        "react/jsx-no-literals": [
          2,
          {
            "noStrings": false,
            "allowedStrings": [],
            "ignoreProps": true,
            "noAttributeStrings": true
          }
        ],
        "react/jsx-no-script-url": [
          "error",
          [
            {
              "name": "Link",
              "props": [
                "to"
              ]
            }
          ]
        ],
        "react/jsx-no-target-blank": [
          2,
          {
            "allowReferrer": true,
            "enforceDynamicLinks": "always",
            "warnOnSpreadAttributes": true,
            "links": true,
            "forms": true
          }
        ],
        "react/jsx-no-undef": [
          2,
          {
            "allowGlobals": true
          }
        ],
        "react/jsx-no-useless-fragment": [
          2,
          {
            "allowExpressions": true
          }
        ],
        "react/jsx-one-expression-per-line": 0,
        "react/jsx-pascal-case": [
          2,
          {
            "allowAllCaps": false,
            "allowLeadingUnderscore": false,
            "allowNamespace": false,
            "ignore": []
          }
        ],
        "react/jsx-props-no-multi-spaces": 2,
        "react/jsx-props-no-spreading": [
          2,
          {
            "html": "ignore",
            "custom": "ignore",
            "explicitSpread": "ignore",
            "exceptions": [
              ""
            ]
          }
        ],
        "react/jsx-sort-default-props": [
          2,
          {
            "ignoreCase": true
          }
        ],
        "react/jsx-sort-props": [
          2,
          {
            "callbacksLast": true,
            "shorthandFirst": true,
            "shorthandLast": false,
            "ignoreCase": false,
            "noSortAlphabetically": true,
            "reservedFirst": true
          }
        ],
        // "react/jsx-space-before-closing": 2,
        "react/jsx-tag-spacing": [
          2,
          {
            "closingSlash": "never",
            "beforeSelfClosing": "always",
            "afterOpening": "never",
            "beforeClosing": "never"
          }
        ],
        "react/jsx-uses-react": 2,
        "react/jsx-uses-vars": 2,
        "react/jsx-wrap-multilines": [
          2,
          {
            "declaration": "parens",
            "assignment": "parens",
            "return": "parens",
            "arrow": "parens",
            "condition": "parens",
            "logical": "parens",
            "prop": "parens"
          }
        ],
        /**
					* 6. jsx-a11y - eslint-plugin-jsx-a11y
					*/
        "jsx-a11y/alt-text": [
          2,
          {
            "elements": [
              "img",
              "object",
              "area",
              "input[type=\"image\"]"
            ],
            "img": [
              "Image"
            ],
            "object": [
              "Object"
            ],
            "area": [
              "Area"
            ],
            "input[type=\"image\"]": [
              "InputImage"
            ]
          }
        ],
        "jsx-a11y/anchor-has-content": [
          2,
          {
            "components": [
              "Anchor"
            ]
          }
        ],
        "jsx-a11y/anchor-is-valid": [
          "error",
          {
            "components": [],
            "specialLink": [
              "hrefLeft",
              "hrefRight"
            ],
            "aspects": [
              "noHref",
              "invalidHref",
              "preferButton"
            ]
          }
        ],
        "jsx-a11y/aria-activedescendant-has-tabindex": 2,
        "jsx-a11y/aria-props": 2,
        "jsx-a11y/aria-proptypes": 2,
        "jsx-a11y/aria-role": [
          2,
          {
            "ignoreNonDOM": true
          }
        ],
        "jsx-a11y/aria-unsupported-elements": 2,
        "jsx-a11y/autocomplete-valid": [
          2,
          {
            "inputComponents": [
              "Input",
              "FormField"
            ]
          }
        ],
        "jsx-a11y/click-events-have-key-events": 2,
        "jsx-a11y/heading-has-content": [
          2,
          {
            "components": [
              "MyHeading"
            ]
          }
        ],
        "jsx-a11y/html-has-lang": 2,
        "jsx-a11y/iframe-has-title": 2,
        "jsx-a11y/img-redundant-alt": [
          2,
          {
            "components": [
              "Image"
            ],
            "words": []
          }
        ],
        "jsx-a11y/interactive-supports-focus": 2,
        "jsx-a11y/label-has-associated-control": [
          2,
          {
            "labelComponents": [
              "CustomInputLabel"
            ],
            "labelAttributes": [
              "label"
            ],
            "controlComponents": [
              "CustomInput"
            ],
            "depth": 3
          }
        ],
        "jsx-a11y/media-has-caption": [
          2,
          {
            "audio": [
              "Audio"
            ],
            "video": [
              "Video"
            ],
            "track": [
              "Track"
            ]
          }
        ],
        "jsx-a11y/mouse-events-have-key-events": 2,
        "jsx-a11y/no-access-key": 2,
        "jsx-a11y/no-autofocus": [
          2,
          {
            "ignoreNonDOM": true
          }
        ],
        "jsx-a11y/no-distracting-elements": [
          2,
          {
            "elements": [
              "marquee",
              "blink"
            ]
          }
        ],
        "jsx-a11y/no-interactive-element-to-noninteractive-role": [
          1,
          {
            "tr": [
              "none",
              "presentation"
            ]
          }
        ],
        "jsx-a11y/no-noninteractive-element-interactions": [
          "error",
          {
            "handlers": [
              "onClick",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp"
            ]
          }
        ],
        "jsx-a11y/no-noninteractive-element-to-interactive-role": [
          2,
          {
            "ul": [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid"
            ],
            "ol": [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid"
            ],
            "li": [
              "menuitem",
              "option",
              "row",
              "tab",
              "treeitem"
            ],
            "table": [
              "grid"
            ],
            "td": [
              "gridcell"
            ]
          }
        ],
        "jsx-a11y/no-noninteractive-tabindex": [
          2,
          {
            "tags": [],
            "roles": [
              "tabpanel"
            ]
          }
        ],
        "jsx-a11y/no-redundant-roles": [
          2,
          {
            "nav": [
              "navigation"
            ]
          }
        ],
        "jsx-a11y/no-static-element-interactions": [
          2,
          {
            "handlers": [
              "onClick",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp"
            ]
          }
        ],
        "jsx-a11y/role-has-required-aria-props": 2,
        "jsx-a11y/role-supports-aria-props": 2,
        "jsx-a11y/scope": 2,
        "jsx-a11y/tabindex-no-positive": 2,
        /**
					7. React Hooks - eslint-plugin-react-hooks
					*/
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
      },
      "settings": {
        "react": {
          "createClass": "createReactClass",
          "pragma": "React",
          "fragment": "Fragment",
          "version": "detect",
          "flowVersion": "0.53"
        },
        "import/extensions": [
          ".ts",
          ".tsx"
        ],
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts",
            ".tsx"
          ]
        },
        "import/ignore": {
          "node_modules": "commonjs"
        },
        "import/docstyle": [
          "jsdoc"
        ],
        "import/cache": {
          "lifetime": "Infinity"
        },
        "import/resolver": {
          "eslint-import-resolver-custom-alias": {
            "alias": {
              "@public": "./public",
              "@app": "./src/app",
              "@common": "./src/common",
              "@components": "./src/components",
              "@config": "./src/config",
              "@lib": "./src/lib",
              "@redux": "./src/redux",
              "@utils": "./src/utils"
            },
            "extensions": [
              ".tsx"
            ]
          }
        }
      }
    },
    /**
			* 2. HTML Configuration @html-eslint Rules
			*/
    {
      "files": [
        "**/*.html"
      ],
      "excludedFiles": [
        "**/*.js?(x)",
        "**/*.ts?(x)",
        "**/*.css",
        "**/*.scss",
        "**/*.json"
      ],
      "env": {
        "browser": true,
        "es6": true,
        "es2016": true,
        "es2017": true,
        "es2018": true,
        "es2019": true,
        "es2020": true,
        "es2021": true,
        "es2022": true,
        "jest": true
      },
      "extends": [
        "plugin:@html-eslint/recommended"
      ],
      "plugins": [
        "@html-eslint"
      ],
      "parser": "@html-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
          "globalReturn": true,
          "impliedStrict": true,
          "jsx": true
        }
      },
      "rules": {
        /**
					* Best Pracice
					*/
        "@html-eslint/require-doctype": 2,
        "@html-eslint/no-duplicate-id": 2,
        "@html-eslint/no-inline-styles": 2,
        "@html-eslint/require-li-container": 2,
        "@html-eslint/no-obsolete-tags": 2,
        "@html-eslint/require-closing-tags": [
          2,
          {
            "selfClosing": "always"
          }
        ],
        "@html-eslint/require-meta-charset": 2,
        "@html-eslint/no-target-blank": 2,
        "@html-eslint/no-duplicate-attrs": 2,
        "@html-eslint/require-button-type": 2,
        "@html-eslint/no-restricted-attrs": 2,
        /**
					* SEO
					*/
        "@html-eslint/require-lang": 2,
        "@html-eslint/require-title": 2,
        "@html-eslint/no-multiple-h1": 2,
        "@html-eslint/require-meta-description": 2,
        /**
					* Accessibility
					*/
        "@html-eslint/require-img-alt": 2,
        "@html-eslint/no-skip-heading-levels": 2,
        "@html-eslint/require-frame-title": 2,
        "@html-eslint/no-non-scalable-viewport": 2,
        "@html-eslint/no-positive-tabindex": 2,
        "@html-eslint/require-meta-viewport": 2,
        "@html-eslint/no-abstract-roles": 2,
        "@html-eslint/no-aria-hidden-body": 2,
        "@html-eslint/no-accesskey-attrs": 2,
        /**
					* Styles
					*/
        "@html-eslint/no-extra-spacing-attrs": 2,
        "@html-eslint/element-newline": 2,
        "@html-eslint/indent": [
          2,
          "tab"
        ],
        "@html-eslint/quotes": [
          2,
          "double"
        ],
        "@html-eslint/id-naming-convention": [
          2,
          "camelCase"
        ],
        "@html-eslint/no-multiple-empty-lines": [
          2,
          {
            "max": 1
          }
        ]
      }
    }
  ]
}
